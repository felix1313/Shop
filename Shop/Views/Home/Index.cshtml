@model Shop.Models.TreeWithProperties
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Home";
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script>
    function selectSubTree(itemId) {
        $(".example_pr").css("display", "none");
        $(".example_pr").removeClass("currentSelected");
        var elems = $("#" + itemId).find(".treeItem");
        for (var i = 0; i < elems.length; ++i) {
            var vis = $("#itemsContainer").find(".example_pr");
            for (var j = 0; j < vis.length; ++j) {
                if (vis[j].id === "ItemPresenter-" + elems[i].id) {
                    $("#" + vis[j].id + ".example_pr").css("display", "block");
                    $("#" + vis[j].id + ".example_pr").addClass("currentSelected");
                }
            }
        }
        var elemsProps = $("#" + itemId).children(".propertiesContainer").find("li");
        var propFilters = $(".propertyFilter");
        $(propFilters).css("display", "none");
        for (var ii = 0; ii < elemsProps.length; ++ii) {
            for (var jj = 0; jj < propFilters.length; ++jj) {
                if (propFilters[jj].id === "PropertyFilter_" + $(elemsProps[ii]).html())
                    $(propFilters[jj]).css("display", "block");
            }
        }
    };

    function filterItems() {
        var items = $(".currentSelected");
        $(items).css("display", "none");
        var propFilters = $(".propertyFilter:visible");
        for (var i = 0; i < items.length; ++i) {
            var setVisible = true;
            var propVals = $(items[i]).find(".propretyName").next(".propretyValue");
            var propNames = $(items[i]).find(".propretyName");
            for (var k = 0; k < propVals.length; ++k) {
                var propVal = $(propVals[k]).html();
                var propName = $(propNames[k]).html();
                if (propVal === "" || propVal === null)
                    continue;
                for (var j = 0; j < propFilters.length; ++j) {
                    if (propFilters[j].id !== "PropertyFilter_" + propName)
                        continue;
                    if ($(propFilters[j]).hasClass("boolType")) {
                        var checked = $(propFilters[j]).children("input[type='checkbox']:checked");
                        setVisible = setVisible && (checked.length > 0 && propVal.toLowerCase() === "true" || checked.length === 0 && propVal.toLowerCase() === "false");
                    }
                    if ($(propFilters[j]).hasClass("stringType")) {
                        var val = $(propFilters[j]).children("input[type='text']").val();
                        setVisible = setVisible && (val === propVal);
                    }
                    if ($(propFilters[j]).hasClass("comparableType")) {
                        var minn = $(propFilters[j]).children(".minProp").val();
                        var maxx = $(propFilters[j]).children(".maxProp").val();
                        setVisible = setVisible && (parseFloat(propVal) >= parseFloat(minn) && parseFloat(propVal) <= parseFloat(maxx));
                    }
                }
            }
            if (setVisible) {
                $(items[i]).css("display", "block");
            }
        }
    }
</script>

<body>
@{
    <h1>@ViewBag.Test</h1>
    <h1>@ViewBag.Test</h1>
    <div>
        <div style="float: left">
            <nav id="left_nav" class='nav_static'>
                <ul>
                    @foreach (var root in @Model.Tree.Roots)
                    {
                        <li>@Html.DisplayFor(r => root, "ItemModelTreeNode")</li>
                    }
                </ul>
            </nav>
        </div>
        <div id="itemsContainer" style="width: 50%">
            @foreach (var item in @Model.Tree.Leafs)
            {
                @Html.DisplayFor(m => item.Value, "ItemModel")
            }
        </div>
        <div>
            @foreach (var prop in @Model.Properties)
            {
                @Html.DisplayFor(m => prop, "UnitPropertyTemplate");
            }
            <button onclick="filterItems()">filter</button>
        </div>
    </div>
}
</body>
